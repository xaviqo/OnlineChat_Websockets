{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mixins } from \"@/mixins\";\nimport { EventBus } from \"@/main\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\nexport default {\n  mixins: [mixins],\n  data: () => ({\n    notConnectedDialog: false,\n    roomCfg: {\n      hasPassword: false,\n      full: false\n    },\n    joinDto: {\n      nickname: '',\n      password: ''\n    },\n    rules: {\n      name: [v => !!v || 'Nickname is required', v => !(v && v.length > 14) || 'Nickname must be less than 14 characters', v => !(v && v.length < 4) || 'Nickname must be at least 4 characters'],\n      password: [v => !!v || 'Password is requited']\n    },\n    myId: '',\n    messages: [{\n      senderId: 'a759609f',\n      senderNick: 'Xavi',\n      time: new Date(),\n      msg: 'Hola que tal, soy colosal',\n      avatarUrl: 'big-ears',\n      uid: 'as96s0d'\n    }, {\n      senderId: 'f422sfl8',\n      senderNick: 'Paula',\n      time: new Date(),\n      msg: 'Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\\n' + '\\n',\n      avatarUrl: 'bottts',\n      uid: 'k3hfh31'\n    }, {\n      senderId: 'a759609f',\n      senderNick: 'Xavi',\n      time: new Date(),\n      msg: 'Puedo prometer y prometo...',\n      avatarUrl: 'big-ears',\n      uid: 'dlk1d34v'\n    }]\n  }),\n  created() {\n    this.existsRoom();\n    if (this.isSessionSetted() && !this.roomMatch()) {\n      EventBus.$emit('showAlert', {\n        color: \"error\",\n        type: \"error\",\n        msg: `You cannot access this chat room.`\n      });\n      this.$router.push(`/404`);\n    }\n\n    /*    if (!this.isSessionSetted()){\n          this.notConnectedDialog = true;\n        }*/\n    this.myId = this.getUserId();\n  },\n  methods: {\n    roomMatch() {\n      return this.$route.params.roomId.toUpperCase() === this.getChatId().toUpperCase();\n    },\n    existsRoom() {\n      this.axios.get(`/v1/cfg/check/${this.$route.params.roomId}`).then(res => {\n        this.roomCfg = res.data;\n        console.log(res.data);\n        if (this.roomCfg.full) {\n          EventBus.$emit('showAlert', {\n            color: \"info\",\n            type: \"info\",\n            msg: `The room is full, try again later`\n          });\n        }\n      }).catch(e => {\n        EventBus.$emit('showAlert', {\n          color: \"error\",\n          type: \"error\",\n          msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n        });\n        this.$router.push(`/404`);\n      });\n    },\n    timeFromDate(date) {\n      return dayjs(date).fromNow();\n    },\n    handleRoomCfg() {}\n  }\n};","map":{"version":3,"mappings":";AAsIA;AACA;AACA;AACA;AACAA;AAEA;EACAC;EACAC;IACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAC;MACAC;IACA;IACAC;MACAC,OACAC,oCACAA,0EACAA,sEACA;MACAH,WACAG;IAEA;IACAC;IACAC,WACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MACAL;MACAC;MACAC;MACAC,uwBACA;MACAC;MACAC;IACA,GACA;MACAL;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EAEA;EACAC;IACA;IAEA;MACAC;QACAC;QACAC;QACAN;MACA;MACA;IACA;;IAEA;AACA;AACA;IACA;EACA;EACAO;IACAC;MACA;IACA;IACAC;MACA,WACAC,kDACAC;QACA;QACAC;QACA;UACAR;YACAC;YACAC;YACAN;UACA;QACA;MACA,GACAa;QACAT;UACAC;UACAC;UACAN;QACA;QACA;MACA;IACA;IACAc;MACA;IACA;IACAC,iBAEA;EACA;AACA","names":["dayjs","mixins","data","notConnectedDialog","roomCfg","hasPassword","full","joinDto","nickname","password","rules","name","v","myId","messages","senderId","senderNick","time","msg","avatarUrl","uid","created","EventBus","color","type","methods","roomMatch","existsRoom","get","then","console","catch","timeFromDate","handleRoomCfg"],"sourceRoot":"src/views","sources":["ChatView.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col cols=\"3\">\n        <v-card height=\"90vh\" class=\"mt-4 ml-4 mr-2\" tile elevation=\"0\">\n        </v-card>\n      </v-col>\n      <v-divider vertical></v-divider>\n      <v-col cols=\"6\">\n        <v-card\n            height=\"90vh\"\n            class=\"mt-4 mr-4 ml-2\"\n            tile\n            elevation=\"0\"\n        >\n          <v-list>\n            <v-list-item three-line\n               v-for=\"msg in messages\"\n               :key=\"msg.uid\"\n            >\n              <v-list-item-content>\n                <v-card\n                    max-width=\"35vw\"\n                    :color=\"(myId === msg.senderId)?'blue':'grey'\"\n                    dark\n                  :class=\"(myId === msg.senderId)?'ml-auto':'mr-auto'\"\n                >\n                  <v-list-item three-line>\n                    <v-list-item-content>\n                      <div class=\"mb-4\">\n                        <v-icon small class=\"mb-1 mr-2\">mdi-account</v-icon>\n                        <strong>{{ msg.senderNick }}</strong>\n                      </div>\n                        <p>\n                        {{ msg.msg }}\n                        </p>\n                      <v-list-item-subtitle class=\"mt-4\">\n                        <v-icon small class=\"mb-1 mr-2\">mdi-clock-outline</v-icon>\n                        {{ timeFromDate(msg.time).charAt(0).toUpperCase() + timeFromDate(msg.time).slice(1) }}\n                      </v-list-item-subtitle>\n                    </v-list-item-content>\n                    <v-badge\n                        bordered\n                        bottom\n                        color=\"green\"\n                        dot\n                        offset-x=\"10\"\n                        offset-y=\"10\"\n                    >\n                      <v-avatar\n                          color=\"grey\"\n                          class=\"lighten-2\"\n                          size=\"50\">\n                        <v-img height=\"50\" :src=\"`https://avatars.dicebear.com/api/${msg.avatarUrl}/${msg.senderNick}.svg`\"></v-img>\n                      </v-avatar>\n                    </v-badge>\n                  </v-list-item>\n                </v-card >\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-card>\n      </v-col>\n      <v-divider vertical inset></v-divider>\n      <v-col cols=\"3\">\n        <v-card height=\"90vh\" class=\"mt-4 ml-4 mr-2\" tile elevation=\"0\">\n          adsds\n        </v-card>\n      </v-col>\n    </v-row>\n    <!--DIALOG-->\n    <template>\n      <v-row justify=\"center\">\n        <v-dialog\n            v-model=\"notConnectedDialog\"\n            persistent\n            max-width=\"30vw\"\n        >\n          <v-card>\n            <v-card-title class=\"text-h5\" v-if=\"!roomCfg.full\">\n              <v-icon class=\"mr-3\" large>mdi-chat-question-outline</v-icon>\n              Do you want to join this chat room?\n            </v-card-title>\n            <v-card-title class=\"text-h5\" v-else>\n              <v-icon class=\"mr-3\" large>mdi-emoticon-sad-outline</v-icon>\n              We are sorry but the room is full, try again later\n            </v-card-title>\n            <v-row v-if=\"!roomCfg.full\" class=\"ma-4\">\n              <v-col>\n                <v-text-field\n                    prepend-inner-icon=\"mdi-account\"\n                    v-model=\"joinDto.nickname\"\n                    :rules=\"rules.name\"\n                    label=\"Your nickname\"\n                    required\n                    filled\n                ></v-text-field>\n              </v-col>\n              <v-col v-if=\"roomCfg.hasPassword\">\n                <v-text-field\n                    prepend-inner-icon=\"mdi-lock\"\n                    v-model=\"joinDto.password\"\n                    :rules=\"rules.password\"\n                    label=\"Room password\"\n                    required\n                    filled\n                ></v-text-field>\n              </v-col>\n            </v-row>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"green darken-1\"\n                  text\n                  @click=\"$router.push(`/`);\"\n              >\n                Exit\n              </v-btn>\n              <v-btn\n                  color=\"green darken-1\"\n                  text\n                  @click=\"notConnectedDialog = false\"\n                  v-if=\"!roomCfg.full\"\n              >\n                Join\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-row>\n    </template>\n  </div>\n</template>\n<script>\nimport { mixins } from \"@/mixins\";\nimport { EventBus } from \"@/main\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nexport default {\n  mixins: [mixins],\n  data: () => ({\n    notConnectedDialog: false,\n    roomCfg: {\n      hasPassword: false,\n      full: false\n    },\n    joinDto: {\n      nickname: '',\n      password: ''\n    },\n    rules: {\n      name: [\n        v => !!v || 'Nickname is required',\n        v => !(v && v.length > 14) || 'Nickname must be less than 14 characters',\n        v => !(v && v.length < 4) || 'Nickname must be at least 4 characters',\n      ],\n      password: [\n          v => !!v || 'Password is requited'\n      ]\n    },\n    myId: '',\n    messages: [\n      {\n        senderId: 'a759609f',\n        senderNick: 'Xavi',\n        time: new Date(),\n        msg: 'Hola que tal, soy colosal',\n        avatarUrl: 'big-ears',\n        uid: 'as96s0d'\n      },\n      {\n        senderId: 'f422sfl8',\n        senderNick: 'Paula',\n        time: new Date(),\n        msg: 'Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\\n' +\n            '\\n',\n        avatarUrl: 'bottts',\n        uid: 'k3hfh31'\n      },\n      {\n        senderId: 'a759609f',\n        senderNick: 'Xavi',\n        time: new Date(),\n        msg: 'Puedo prometer y prometo...',\n        avatarUrl: 'big-ears',\n        uid: 'dlk1d34v'\n      },\n    ]\n  }),\n  created() {\n    this.existsRoom();\n\n    if (this.isSessionSetted() && !this.roomMatch()) {\n      EventBus.$emit('showAlert', {\n        color: \"error\",\n        type: \"error\",\n        msg: `You cannot access this chat room.`\n      });\n      this.$router.push(`/404`);\n    }\n\n/*    if (!this.isSessionSetted()){\n      this.notConnectedDialog = true;\n    }*/\n    this.myId = this.getUserId();\n  },\n  methods: {\n    roomMatch() {\n      return (this.$route.params.roomId.toUpperCase() === this.getChatId().toUpperCase());\n    },\n    existsRoom(){\n      this.axios\n          .get(`/v1/cfg/check/${this.$route.params.roomId}`)\n          .then((res) => {\n            this.roomCfg = res.data;\n            console.log(res.data);\n            if (this.roomCfg.full){\n              EventBus.$emit('showAlert', {\n                color: \"info\",\n                type: \"info\",\n                msg: `The room is full, try again later`\n              });\n            }\n          })\n          .catch((e) => {\n            EventBus.$emit('showAlert', {\n              color: \"error\",\n              type: \"error\",\n              msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n            });\n            this.$router.push(`/404`);\n          });\n    },\n    timeFromDate(date){\n      return dayjs(date).fromNow();\n    },\n    handleRoomCfg(){\n\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}