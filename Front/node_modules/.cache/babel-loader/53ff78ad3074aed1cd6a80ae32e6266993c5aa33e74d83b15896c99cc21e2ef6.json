{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'CreateRoomCard',\n  created() {\n    this.getMaxUsers();\n  },\n  data: () => ({\n    showCard: false,\n    maxUsers: [],\n    roomDto: {\n      roomTopic: \"\",\n      adminNickname: \"\",\n      passwordProtected: false,\n      showInLobby: false,\n      usersLimit: 2\n    }\n  }),\n  methods: {\n    createRoom() {\n      this.axios.put(`/v1/game/cfg/${this.retrieveLobbyId()}`, this.gameDto).then(res => {\n        if (res.status === 200) {\n          EventBus.$emit('showAlert', {\n            color: \"success\",\n            type: \"success\",\n            msg: `New lobby successfully created`\n          });\n          this.$router.push(`/lobby/${this.retrieveLobbyId()}`);\n        }\n      }).catch(e => {\n        EventBus.$emit('showAlert', {\n          color: \"error\",\n          type: \"error\",\n          msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n        });\n        if (e.response.data.code == \"006\") {\n          this.$router.push(`/lobby/${this.retrieveLobbyId()}`);\n        }\n      });\n    },\n    getMaxUsers() {\n      let limit = 0;\n      this.axios.get(`/v1/room/users-limit`).then(res => {\n        limit = res.data;\n      });\n      for (let i = 1; i <= limit; i++) {\n        this.maxUsers.push(i);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAwGA;EACAA;EACAC;IACA;EACA;EACAC;IACAC;IACAC;IACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA,WACAC,4DACAC;QACA;UACAC;YACAC;YACAC;YACAC;UACA;UACA;QACA;MACA,GACAC;QACAJ;UACAC;UACAC;UACAC;QACA;QACA;UACA;QACA;MACA;IACA;IACAE;MACA;MACA,WACAC,4BACAP;QACAQ;MACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["name","created","data","showCard","maxUsers","roomDto","roomTopic","adminNickname","passwordProtected","showInLobby","usersLimit","methods","createRoom","put","then","EventBus","color","type","msg","catch","getMaxUsers","get","limit"],"sourceRoot":"src/components/home","sources":["CreateRoomCard.vue"],"sourcesContent":["<template>\n  <v-card\n      tile\n      dark\n      elevation=\"0\"\n      class=\"full-height\"\n  >\n    <v-img\n        height=\"55vh\"\n        src=\"https://unsplash.com/photos/9OKGEVJiTKk/download?force=true&w=640\"\n        class=\"pa-12\"\n    >\n      <v-row fluid class=\"fill-height d-flex justify-center align-center\" v-if=\"showCard\">\n        <v-col cols=\"10\">\n\n          <v-card light class=\"pa-6 transparent-title-color\" transition=\"fade-transition\">\n            <v-form\n                ref=\"form\"\n                v-model=\"valid\"\n                lazy-validation\n            >\n              <v-row>\n                <v-col cols=\"6\">\n                  <v-card-title class=\"ml-n4\">Customize your chat room</v-card-title>\n                </v-col>\n                <v-col cols=\"6\" class=\"text-right\">\n                  <v-btn icon @click=\"showCard = false\"><v-icon>mdi-close</v-icon></v-btn>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                      v-model=\"topic\"\n                      :rules=\"roomNameRules\"\n                      label=\"Room name/topic (or leave empty)\"\n                      filled\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-text-field\n                      v-model=\"nickname\"\n                      :rules=\"nicknameRules\"\n                      label=\"Your nickname\"\n                      required\n                      filled\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"6\">\n                  <v-select\n                      v-model=\"userLimitSelect\"\n                      :items=\"userLimit\"\n                      :rules=\"[v => !!v || 'Item is required']\"\n                      label=\"Users limit\"\n                      required\n                      filled\n                  ></v-select>\n                </v-col>\n                <v-col cols=\"3\">\n                  <v-checkbox\n                      v-model=\"openToPublicBool\"\n                      label=\"Password protected?\"\n                      filled\n                      class=\"mt-n1\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col cols=\"3\">\n                  <v-checkbox\n                      v-model=\"passwordBool\"\n                      label=\"Show in lobby explorer?\"\n                      filled\n                      class=\"mt-n1\"\n                  ></v-checkbox>\n                </v-col>\n              </v-row>\n\n            </v-form>\n          </v-card>\n        </v-col>\n\n        <v-row fluid class=\"d-flex justify-center align-center mt-n12\">\n            <v-btn class=\"transparent-title-color\" light x-large outlined elevation=\"8\">\n              <v-card-title class=\"full-height justify-center\" primary-title\n              @click=\"createRoom\"\n              >\n                Create chat room\n              </v-card-title>\n            </v-btn>\n        </v-row>\n\n      </v-row>\n\n      <v-row fluid class=\"fill-height\" v-if=\"!showCard\">\n        <v-col class=\"d-flex justify-center align-center\">\n          <v-btn class=\"transparent-title-color\" light x-large outlined elevation=\"8\" @click=\"showCard = true\">\n            <v-card-title primary-title>\n              Create and customize your own chat room\n            </v-card-title>\n          </v-btn>\n        </v-col>\n      </v-row>\n\n    </v-img>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  name: 'CreateRoomCard',\n  created() {\n    this.getMaxUsers();\n  },\n  data: () => ({\n    showCard: false,\n    maxUsers: [],\n    roomDto: {\n      roomTopic: \"\",\n      adminNickname: \"\",\n      passwordProtected: false,\n      showInLobby: false,\n      usersLimit: 2\n    }\n  }),\n  methods: {\n    createRoom(){\n      this.axios\n          .put(`/v1/game/cfg/${this.retrieveLobbyId()}`, this.gameDto)\n          .then((res) => {\n            if (res.status === 200) {\n              EventBus.$emit('showAlert', {\n                color: \"success\",\n                type: \"success\",\n                msg: `New lobby successfully created`\n              });\n              this.$router.push(`/lobby/${this.retrieveLobbyId()}`);\n            }\n          })\n          .catch((e) => {\n            EventBus.$emit('showAlert', {\n              color: \"error\",\n              type: \"error\",\n              msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n            });\n            if (e.response.data.code == \"006\"){\n              this.$router.push(`/lobby/${this.retrieveLobbyId()}`);\n            }\n          });\n    },\n    getMaxUsers(){\n      let limit = 0;\n      this.axios\n          .get(`/v1/room/users-limit`)\n          .then((res) => {\n            limit = res.data;\n          });\n      for (let i = 1; i <= limit; i++) {\n        this.maxUsers.push(i);\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n.transparent-title-color {\n  background-color: rgba(255, 255, 255, .8) !important;\n  border-color: white !important;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}