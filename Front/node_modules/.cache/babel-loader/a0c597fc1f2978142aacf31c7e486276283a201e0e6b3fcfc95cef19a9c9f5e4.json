{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from \"@/main\";\nimport { mixins } from \"@/mixins\";\nexport default {\n  mixins: [mixins],\n  name: \"ChatJoin\",\n  data: () => ({\n    showDialog: true,\n    roomCfg: {\n      hasPassword: false,\n      full: false\n    },\n    joinDto: {\n      userNickname: '',\n      avatarUrl: '',\n      chatRoomPassword: '',\n      chatRoomId: ''\n    },\n    rules: {\n      name: [v => !!v || 'Nickname is required', v => !(v && v.length > 14) || 'Nickname must be less than 14 characters', v => !(v && v.length < 4) || 'Nickname must be at least 4 characters'],\n      password: [v => !!v || 'Password is requited']\n    },\n    avatarStyles: []\n  }),\n  created() {\n    this.loadRoomCfg();\n    if (this.isSessionSetted()) this.isUserAlreadyInscribed();\n  },\n  methods: {\n    joinRoom() {\n      this.axios.post(`/v1/room/join`, this.joinDto).then(res => {\n        this.showDialog = false;\n      }).catch(e => {\n        EventBus.$emit('showAlert', {\n          color: \"error\",\n          type: \"error\",\n          msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n        });\n      });\n    },\n    loadNotRegisteredUserData() {\n      this.getAvatarStyles();\n      this.validConnection = false;\n      this.joinDto.chatRoomId = this.$route.params.roomId;\n    },\n    getAvatarStyles() {\n      this.axios.get(`/v1/cfg/avatar-styles`).then(res => {\n        this.avatarStyles = res.data;\n        this.newAvatarStyle('');\n      });\n    },\n    newAvatarStyle(actualStyle) {\n      const totalStyles = this.avatarStyles.length;\n      const newStyle = this.avatarStyles[Math.floor(totalStyles * Math.random())];\n      if (newStyle === actualStyle) this.newAvatarStyle(actualStyle);else this.joinDto.avatarUrl = newStyle;\n    },\n    loadRoomCfg() {\n      this.axios.get(`/v1/check/room-status/${this.$route.params.roomId}`).then(res => {\n        this.roomCfg = res.data;\n        if (this.roomCfg.full) {\n          EventBus.$emit('showAlert', {\n            color: \"info\",\n            type: \"info\",\n            msg: `The room is full, try again later`\n          });\n        }\n      }).catch(e => {\n        EventBus.$emit('showAlert', {\n          color: \"error\",\n          type: \"error\",\n          msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n        });\n        this.showDialog = false;\n        this.$router.push(`/404`);\n      });\n    },\n    isUserAlreadyInscribed() {\n      this.axios.get(`/v1/check/user-inscribed/${this.$route.params.roomId}`).then(res => {\n        this.showDialog = false;\n        this.$router.push(\"/room/\" + this.$route.params.roomId);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA4EA;AACA;AAEA;EACAA;EACAC;EACAC;IACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAC;MACAC;MACAC;MACAC;IACA;IACAC;MACAX,OACAY,oCACAA,0EACAA,sEACA;MACAC,WACAD;IAEA;IACAE;EACA;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACA,WACAC,oCACAC;QACA;MACA,GACAC;QACAC;UACAC;UACAC;UACAC;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA,WACAC,6BACAR;QACA;QACA;MACA;IACA;IACAS;MACA;MACA;MACA,oEACA;IACA;IACAC;MACA,WACAF,0DACAR;QACA;QACA;UACAE;YACAC;YACAC;YACAC;UACA;QACA;MACA,GACAJ;QACAC;UACAC;UACAC;UACAC;QACA;QACA;QACA;MACA;IACA;IACAM;MACA,WACAH,6DACAR;QACA;QACA;MACA;IACA;EACA;AACA","names":["mixins","name","data","showDialog","roomCfg","hasPassword","full","joinDto","userNickname","avatarUrl","chatRoomPassword","chatRoomId","rules","v","password","avatarStyles","created","methods","joinRoom","post","then","catch","EventBus","color","type","msg","loadNotRegisteredUserData","getAvatarStyles","get","newAvatarStyle","loadRoomCfg","isUserAlreadyInscribed"],"sourceRoot":"src/components/chat","sources":["ChatJoin.vue"],"sourcesContent":["<template>\n    <v-row justify=\"center\">\n      <v-dialog\n          v-model=\"showDialog\"\n          persistent\n          max-width=\"30vw\"\n      >\n        <v-card>\n          <v-card-title class=\"text-h5\" v-if=\"!roomCfg.full\">\n            <v-icon class=\"mr-3\" large>mdi-chat-question-outline</v-icon>\n            Do you want to join this chat room?\n          </v-card-title>\n          <v-card-title class=\"text-h5\" v-else>\n            <v-icon class=\"mr-3\" large>mdi-emoticon-sad-outline</v-icon>\n            We are sorry but the room is full, try again later\n          </v-card-title>\n          <v-row v-if=\"!roomCfg.full\" class=\"ma-4\">\n            <v-col v-if=\"roomCfg.hasPassword\" cols=\"5\">\n              <v-text-field\n                  prepend-inner-icon=\"mdi-lock\"\n                  v-model=\"joinDto.password\"\n                  :rules=\"rules.password\"\n                  label=\"Room password\"\n                  required\n                  filled\n              ></v-text-field>\n            </v-col>\n            <v-col>\n              <v-text-field\n                  prepend-inner-icon=\"mdi-account\"\n                  v-model=\"joinDto.userNickname\"\n                  :rules=\"rules.name\"\n                  label=\"Your nickname\"\n                  required\n                  filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"2\">\n              <v-avatar\n                  color=\"grey\"\n                  class=\"lighten-2\"\n                  size=\"50\">\n                <v-icon v-if=\"joinDto.userNickname.length <= 3\" x-large>mdi-help-circle-outline</v-icon>\n                <v-img height=\"50\" :src=\"avatarizeNickname(joinDto.userNickname,joinDto.avatarUrl)\" v-if=\"joinDto.userNickname.length > 3\"></v-img>\n              </v-avatar>\n              <v-avatar\n                  color=\"transparent\"\n                  size=\"50\">\n                <v-icon @click=\"newAvatarStyle(joinDto.avatarUrl)\">mdi-dice-5-outline</v-icon>\n              </v-avatar>\n            </v-col>\n          </v-row>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n                color=\"green darken-1\"\n                text\n                @click=\"$router.push(`/`);\"\n            >\n              Exit\n            </v-btn>\n            <v-btn\n                color=\"green darken-1\"\n                text\n                @click=\"joinRoom()\"\n                v-if=\"!roomCfg.full\"\n            >\n              Join\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-row>\n</template>\n\n<script>\nimport {EventBus} from \"@/main\";\nimport {mixins} from \"@/mixins\";\n\nexport default {\n  mixins: [mixins],\n  name: \"ChatJoin\",\n  data: () => ({\n    showDialog: true,\n    roomCfg: {\n      hasPassword: false,\n      full: false\n    },\n    joinDto: {\n      userNickname: '',\n      avatarUrl: '',\n      chatRoomPassword: '',\n      chatRoomId: ''\n    },\n    rules: {\n      name: [\n        v => !!v || 'Nickname is required',\n        v => !(v && v.length > 14) || 'Nickname must be less than 14 characters',\n        v => !(v && v.length < 4) || 'Nickname must be at least 4 characters',\n      ],\n      password: [\n        v => !!v || 'Password is requited'\n      ]\n    },\n    avatarStyles: []\n  }),\n  created() {\n    this.loadRoomCfg();\n    if (this.isSessionSetted()) this.isUserAlreadyInscribed();\n  },\n  methods: {\n    joinRoom(){\n      this.axios\n          .post(`/v1/room/join`,this.joinDto)\n          .then((res) => {\n            this.showDialog = false;\n          })\n          .catch((e) => {\n            EventBus.$emit('showAlert', {\n              color: \"error\",\n              type: \"error\",\n              msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n            });\n          });\n    },\n    loadNotRegisteredUserData(){\n      this.getAvatarStyles();\n      this.validConnection = false;\n      this.joinDto.chatRoomId = this.$route.params.roomId;\n    },\n    getAvatarStyles(){\n      this.axios\n          .get(`/v1/cfg/avatar-styles`)\n          .then((res) => {\n            this.avatarStyles = res.data;\n            this.newAvatarStyle('');\n          });\n    },\n    newAvatarStyle(actualStyle){\n      const totalStyles = this.avatarStyles.length;\n      const newStyle = this.avatarStyles[Math.floor(totalStyles * Math.random())];\n      if (newStyle === actualStyle) this.newAvatarStyle(actualStyle);\n      else this.joinDto.avatarUrl = newStyle;\n    },\n    loadRoomCfg(){\n      this.axios\n          .get(`/v1/check/room-status/${this.$route.params.roomId}`,)\n          .then((res) => {\n            this.roomCfg = res.data;\n            if (this.roomCfg.full){\n              EventBus.$emit('showAlert', {\n                color: \"info\",\n                type: \"info\",\n                msg: `The room is full, try again later`\n              });\n            }\n          })\n          .catch((e) => {\n            EventBus.$emit('showAlert', {\n              color: \"error\",\n              type: \"error\",\n              msg: `Error ${e.response.data.code}. ${e.response.data.message}`\n            });\n            this.showDialog = false;\n            this.$router.push(`/404`);\n          });\n    },\n    isUserAlreadyInscribed(){\n      this.axios\n          .get(`/v1/check/user-inscribed/${this.$route.params.roomId}`)\n          .then((res) => {\n            this.showDialog = false;\n            this.$router.push(\"/room/\"+this.$route.params.roomId);\n          })\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}