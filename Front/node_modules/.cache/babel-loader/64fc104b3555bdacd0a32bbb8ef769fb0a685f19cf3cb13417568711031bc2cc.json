{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mixins } from \"@/mixins\";\nimport { EventBus } from \"@/main\";\nexport default {\n  mixins: [mixins],\n  data: () => ({\n    notConnectedDialog: false\n  }),\n  created() {\n    //this.existsRoom();\n\n    /*    if (this.isSessionSetted() && !this.roomMatch()) {\n          EventBus.$emit('showAlert', {\n            color: \"error\",\n            type: \"error\",\n            msg: `You cannot access this chat room.`\n          });\n          this.$router.push(`/404`);\n        }*/\n\n    if (!this.isSessionSetted()) {\n      this.notConnectedDialog = true;\n    }\n  },\n  methods: {\n    roomMatch() {\n      return this.$route.params.roomId.toUpperCase() === this.getChatId().toUpperCase();\n    },\n    existsRoom() {\n      this.axios.get(`/v1/room/ping/${this.$route.params.roomId}`).then(res => {\n        if (!res.data) this.$router.push(`/404`);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAuCA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;MACA;IACA;EAEA;EACAC;IACAC;MACA;IACA;IACAC;MACA,WACAC,kDACAC;QACA;MACA;IACA;EACA;AACA","names":["mixins","data","notConnectedDialog","created","methods","roomMatch","existsRoom","get","then"],"sourceRoot":"src/views","sources":["ChatView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Room test page</h1>\n    <template>\n      <v-row justify=\"center\">\n        <v-dialog\n            v-model=\"notConnectedDialog\"\n            persistent\n            max-width=\"290\"\n        >\n          <v-card>\n            <v-card-title class=\"text-h5\">\n              Use Google's location service?\n            </v-card-title>\n            <v-card-text>Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.</v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"green darken-1\"\n                  text\n                  @click=\"notConnectedDialog = false\"\n              >\n                Disagree\n              </v-btn>\n              <v-btn\n                  color=\"green darken-1\"\n                  text\n                  @click=\"notConnectedDialog = false\"\n              >\n                Agree\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-row>\n    </template>\n  </div>\n</template>\n<script>\nimport { mixins} from \"@/mixins\";\nimport { EventBus } from \"@/main\";\n\nexport default {\n  mixins: [mixins],\n  data: () => ({\n    notConnectedDialog: false,\n  }),\n  created() {\n    //this.existsRoom();\n\n/*    if (this.isSessionSetted() && !this.roomMatch()) {\n      EventBus.$emit('showAlert', {\n        color: \"error\",\n        type: \"error\",\n        msg: `You cannot access this chat room.`\n      });\n      this.$router.push(`/404`);\n    }*/\n\n    if (!this.isSessionSetted()){\n      this.notConnectedDialog = true;\n    }\n\n  },\n  methods: {\n    roomMatch() {\n      return (this.$route.params.roomId.toUpperCase() === this.getChatId().toUpperCase());\n    },\n    existsRoom(){\n      this.axios\n          .get(`/v1/room/ping/${this.$route.params.roomId}`)\n          .then((res) => {\n            if (!res.data) this.$router.push(`/404`);\n          });\n    }\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}